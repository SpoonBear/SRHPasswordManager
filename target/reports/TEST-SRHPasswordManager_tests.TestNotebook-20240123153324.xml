<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SRHPasswordManager_tests.TestNotebook-20240123153324" tests="4" file="SRHPasswordManager_tests.py" time="0.202" timestamp="2024-01-23T15:33:24" failures="0" errors="1" skipped="0">
	<testcase classname="SRHPasswordManager_tests.TestNotebook" name="test_add_entry" time="0.151" timestamp="2024-01-23T15:33:24"/>
	<testcase classname="SRHPasswordManager_tests.TestNotebook" name="test_check_for_file_existing" time="0.002" timestamp="2024-01-23T15:33:24"/>
	<testcase classname="SRHPasswordManager_tests.TestNotebook" name="test_check_for_file_not_existing" time="0.002" timestamp="2024-01-23T15:33:24"/>
	<testcase classname="SRHPasswordManager_tests.TestNotebook" name="test_load_and_decrypt" time="0.047" timestamp="2024-01-23T15:33:24">
		<error type="StopIteration" message=""><![CDATA[Traceback (most recent call last):
  File "C:\Users\Acer\anaconda3\Lib\unittest\case.py", line 57, in testPartExecutor
    yield
  File "C:\Users\Acer\anaconda3\Lib\unittest\case.py", line 623, in run
    self._callTestMethod(testMethod)
    ^^^^^^^^^^^^^^^^^
  File "C:\Users\Acer\anaconda3\Lib\unittest\case.py", line 579, in _callTestMethod
    if method() is not None:
    ^^^^^^^^^^^^^^^^^
  File "c:\users\acer\documents\github\srhpasswordmanager\src\unittest\python\SRHPasswordManager_tests.py", line 27, in test_load_and_decrypt
    key = self.notebook.generate_key()
    ^^^^^^^^^^^^^^^^^
  File "c:\users\acer\documents\github\srhpasswordmanager\src\main\python\SRHPasswordManager.py", line 134, in generate_key
    password = input('Please enter the master password\n')
    ^^^^^^^^^^^^^^^^^
  File "C:\Users\Acer\anaconda3\Lib\unittest\mock.py", line 1124, in __call__
    return self._mock_call(*args, **kwargs)
    ^^^^^^^^^^^^^^^^^
  File "C:\Users\Acer\anaconda3\Lib\unittest\mock.py", line 1128, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
    ^^^^^^^^^^^^^^^^^
  File "C:\Users\Acer\anaconda3\Lib\unittest\mock.py", line 1185, in _execute_mock_call
    result = next(effect)
    ^^^^^^^^^^^^^^^^^
StopIteration
]]></error>
	</testcase>
</testsuite>
